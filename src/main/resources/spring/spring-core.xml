<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:websocket="http://www.springframework.org/schema/websocket" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		  http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="focus.search.suggestions"/>

    <bean id="insertRedis" class="focus.search.base.Constant" init-method="insertRedis"/>

    <!--手动注入 focus.search.service.HistoryServiceImpl-->
    <bean id="historyUtils" class="focus.search.suggestions.HistoryUtils" init-method="init">
        <property name="historyService" ref="historyService"/>
    </bean>

    <bean id="historyService" class="focus.search.service.HistoryServiceImpl"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- flyway -->
    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="locations" value="migration"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="validateOnMigrate" value="false"/>
    </bean>
    <!-- jdbc -->
    <!--<context:property-placeholder ignore-resource-not-found="false" location="file:/srv/focus/conf/search/druid.properties"/>-->
    <context:property-placeholder ignore-resource-not-found="false" location="classpath:conf/druid.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${server.username}"/>
        <property name="password" value="${server.password}"/>
        <property name="filters" value="${filters}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
    </bean>
    <!-- transaction -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" rollback-for="Throwable"/>
            <tx:method name="update*" rollback-for="Throwable"/>
            <tx:method name="delete*" rollback-for="Throwable"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* focus.search.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="focus.search.dao"/>
    <context:component-scan base-package="focus.search.service"/>

    <bean id="search" class="focus.search.controller.WebsocketSearch"/>
    <bean id="pinboard" class="focus.search.controller.WebsocketPinboard"/>
    <!--<bean id="init" class="focus.search.DefaultModel" init-method="defaultRules"/>-->
    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/websocket/search" handler="search"/>
        <websocket:mapping path="/websocket/pinboard" handler="pinboard"/>
        <websocket:handshake-interceptors>
            <bean class="focus.search.controller.WebsocketCheck"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>

</beans>
